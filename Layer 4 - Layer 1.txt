Layer 4 - The Transport Layer
    - The transport layer provides transparent transfer of data between hosts and is responsible for end to end error recovery and flow control.
    - Flow control is the process of adjusting the flow of data from the sender to ensure that the receiving host can handle all of it.

# Session Multiplexing
    - Session Multiplexing is the process by which a host is able to support multiple sessions simultaneously and manager the individual traffic streams over a single link.

# Layer 4 Port Numbers  
    - The Layer 4 destination port number is used to identify the upper layer protocol.
    - For example, HTTP uses port 80, SMTP email uses port 25.
    - The sender also adds a source port number to the Layer 4 header.
    - The combination of source and destination port number can be used to track sessions. E.g DST: 80 SRC: 1500

# TCP
    - TCP (Transmission Control Protocol) and UDP (User Datagram Protocol) are the most common Layer 4 protocols. 
    - TCP is connection oriented - once a connection is established, data can be sent bidirectionally over that connection.
    - TCP carries out sequencing to ensure segments are processed in the correct order and none are missing.
    - TCP is reliable - the receiving host sends acknowledgments back to the sender. Lost segments are resent.
    - TCP performs flow control.

# TCP Three-Way Handshake
    - SYN (Synchronize)
    - SYN-ACK (Synchronize - Acknowledgement)
    - ACK (Acknowledgement)

## TCP Header Format  

    The TCP header contains several fields used for reliable, connection-oriented communication.  


### Field Explanations (Brief)
    - **Source Port / Destination Port** → Identify sending and receiving applications.  
    - **Sequence Number** → Tracks the position of data in the stream.  
    - **Acknowledgment Number** → Confirms receipt of data.  
    - **Data Offset** → Size of the TCP header.  
    - **Reserved** → Reserved for future use (set to 0).  
    - **Control Flags** → 6 bits: URG, ACK, PSH, RST, SYN, FIN (used to control connections).  
    - **Window Size** → Flow control; how much data can be sent before requiring acknowledgment.  
    - **Checksum** → Error-checking for header and data.  
    - **Urgent Pointer** → Marks urgent data (used with URG flag).  
    - **Options** → Extra settings (e.g., Maximum Segment Size).  
    - **Data** → The actual payload (application data).  
---
# UDP
    - The User Datagram Protocol sends traffic best effort.
    - UDP is not connection oriented. There is no handshake connection setup between the hosts.
    - UDP does not carry out sequencing to ensure segments are processed in the correct order and none are missing.
    - UDP is not reliable - the receiving host does not send acknowledgments back to the sender.
    - UDP does not perform flow control
    - If error detection and recovery is required it is up to the upper layers to provide it.

## UDP Header Format  

The UDP header is much simpler than TCP, providing basic connectionless communication.  


### Field Explanations (Brief)
- **Source Port / Destination Port** → Identify sending and receiving applications.  
- **Length** → Total length of the UDP header and data (in bytes).  
- **Checksum** → Error-checking for header and data (optional in IPv4, mandatory in IPv6).  
- **Data** → The actual payload (application data).  

---

- **TCP** → Complex, reliable, connection-oriented, with sequencing/acknowledgments.  
- **UDP** → Simple, fast, connectionless, with minimal overhead.  

# TCP vs UDP
    - Application developers will typically choose to use TCP for traffic which requires reliability.
    - Real-time applications such as voice and video can't afford the extra overhead of TCP so they can use UDP,
    - Some applications can use both TCP and UDP.

# Common applications and their destination protocols
    # TCP
        - FTP (21)
        - SSH (22)
        - TELNET (23)
        - HTTP (80)
        - HTTPS (443)
    # UDP
        - TFTP (69)
        - SNMP (161)
    # TCP & UDP 
        - DNS (53)

# Layer 3 - The Network Layer
    - The Network layer is responsible for routing packets to their destination and for quality of service.
    - IP (Internet Protocol) is the best known layer 3 protocol.
    - It is a connectionless protocol with no acknowledgments at Layer 3.
    - Other Layer 3 protocols include ICMP (Internet Control Message Protocol) and IPSec.

# IP Addressing
    - IP Addressing is a logical addressing scheme which is implemented at Layer 3
    - The Network designer uses IP addressing to partition the overall network into smaller 'subnets'.
    - This improves performance and security and makes troubleshooting easier.
    - Layer 2 MAC addresses use one big flat addressing scheme. There is no logical separation between networks at Layer 2, it is done at Layer 3.

## IPv4 Header Format  

    The IPv4 header contains fields used for addressing, routing, and delivering packets.  


### Field Explanations (Brief)  
    - **Version (4 bits)** → IP version (always `4` for IPv4).  
    - **Header Length (IHL, 4 bits)** → Length of the IPv4 header in 32-bit words.  
    - **Type of Service (TOS, 8 bits)** → Originally for service priority; now often split into **DSCP** (QoS) and **ECN** (congestion control).  
    - **Total Length (16 bits)** → Entire packet size in bytes (header + data).  
    - **Identification (16 bits)** → Unique value for fragment reassembly.  
    - **Flags (3 bits)** → Control fragmentation (e.g., DF = Don’t Fragment, MF = More Fragments).  
    - **Fragment Offset (13 bits)** → Position of this fragment in the original packet.  
    - **Time to Live (TTL, 8 bits)** → Decremented by each router hop; prevents looping.  
    - **Protocol (8 bits)** → Identifies the encapsulated protocol (e.g., 1 = ICMP, 6 = TCP, 17 = UDP).  
    - **Header Checksum (16 bits)** → Error-checking for the IPv4 header.  
    - **Source Address (32 bits)** → IPv4 address of the sender.  
    - **Destination Address (32 bits)** → IPv4 address of the receiver.  
    - **Options (variable, rarely used)** → Extra control features.  
    - **Data (Payload)** → Encapsulated upper-layer data (TCP, UDP, ICMP, etc.).  

    ---

### Unicast, Broadcaast and Multicast traffic
    - There are 3 main IP traffic types: unicast, broadcast and multicast.
    - Unicast traffic is to a single destination host.
    - Broadcaast traffic is to all hosts on the subnet.
    - Multicast traaffic is to multiple interested hosts.

ROUTERS DO NOT FORWARD BROADCAST TRAFFIC  

### Subnet Size

The number of hosts available in a subnet depends on how many bits are allocated to the **host portion** of the address.  
- The **more host bits**, the **more available IP addresses**.  
- The **fewer host bits**, the **fewer available IP addresses**.

### Examples
- **Subnet Mask: /8**  
  - Network portion = 8 bits  
  - Host portion = 24 bits  
  - Number of host addresses = `2^24 - 2 = 16,777,214`  
  - (Subtract 2 for network + broadcast)

- **Subnet Mask: /24**  
  - Network portion = 24 bits  
  - Host portion = 8 bits  
  - Number of host addresses = `2^8 - 2 = 254`

### General Formula
\[
\text{Usable Hosts} = 2^{\text{host bits}} - 2
\]

The **`-2`** accounts for:  
1. **Network Address** (all host bits = 0)  
2. **Broadcast Address** (all host bits = 1)  

## Class A IPv4 Addresses  

The IPv4 address space was historically divided into **classes** (Class A, B, C, D, and E). While classful addressing is largely obsolete and replaced by **CIDR (Classless Inter-Domain Routing)**, it’s still useful for foundational understanding.  

### Characteristics of Class A
    - **First bit**: Always `0`  
    - **Default subnet mask**: `/8` (255.0.0.0)  
    - **Network range**: `1.0.0.0` to `126.0.0.0` (/8 networks)  
    - **Number of possible Class A networks**: 126  
    - **Hosts per network**: `2^24 - 2 = 16,777,214`  
    - `-2` accounts for the **network** and **broadcast** addresses  

### Notes
- Designed for **very large organisations** needing millions of host addresses.  
- Address `127.x.x.x` is reserved for **loopback testing**, not for host addressing.  

### Quick Reference
| Property              | Value                                  |
|-----------------------|----------------------------------------|
| First Octet Range     | 1 – 126                                |
| Default Subnet Mask   | 255.0.0.0 (/8)                         |
| Number of Networks    | 126                                    |
| Hosts per Network     | 16,777,214                             |
| Special Use           | 127.0.0.0/8 reserved for loopback      |
    
## Reserved Class A Addresses  

Certain ranges within the **Class A space** are reserved and cannot be assigned to hosts.  

### 0.0.0.0/8 — "This Network"  
- Reserved to represent **“this network”** in routing and configuration.  
- Range: `0.0.0.1` to `0.255.255.255` are not valid for assignment to hosts.  
- `0.0.0.0` in routing tables represent the **default route**.  

### 127.0.0.0/8 — Loopback  
- Reserved for **loopback addresses** used to test the local computer’s TCP/IP stack.  
- Range: `127.0.0.0` to `127.255.255.255`  
- Commonly used address: `127.0.0.1` (local host / “localhost”).  
- Not valid for assignment to physical network hosts.  

### Key Point  
These reservations remove **33,554,432 addresses** from the usable global IPv4 address pool.  

### Class B IP Addresses
    = Class B addresses are assigned to medium-sized to large-sized networks.
    - The two high-order bits in a class B address are always set to binary 10.
    - The default subnet mask is /16.
    - Valid network addresses range from 128.0.0.0 to 191.255.0.0/16
    - This allows for 16,384 networks and 65534 hosts per network.

### Class C IP Addresses
    - Class C addresses are used for small networks
    - The three high-order bits in a class C address are always set to binary 110.
    - The default subnet mask is /24.
    - Valid network addresses range from 192.0.0.0 to 223.255.255.0/24/
    - This allows for 2097152 networks and 254 hosts per network.
    
### Note on Private Addresses
    - There is a range of reserved Private Addresses in each class.
    - These are valid to be assigned to hosts, but they are not routable on the public internet.
    - They were originally designed for hosts in a closed private network with no Internet connectivity.
    - CLASS A: 10.0.0.0 TO 10.255.255.255
    - CLASS B: 172.16.0.0 TO 172.31.255.255
    - CLASS C: 192.168.0.0 TO 192.168.255.255

### CLASS D IP Address
    - Class D addresses are reserved for IP multicast addresses.
    - The four high-order bits in a class D address are always set to binary 1110
    - These addresses are not allocated to hosts, and there is no default subnet mask
    - Valid addresses range from 224.0.0.0 to 239.255.255.255
### CLASS E IP Address
    - Class E addresses are 'experimental and reserved for future use'
    - The high-order bits in a class E address are set to 1111
    - These addresses are not allocated to hosts, and there is no default subnet mask
    - Addresses range from 240.0.0.0 to 255.255.255.255
    - 255.255.255.255 is the broadcast address for 'this network'

### IP Address Class Summary
    - CLASS A | 1 - 126 | /8 | 255.0.0.0
    - CLASS B | 128 - 191 | /16 | 255.255.0.0
    - CLASS C | 192 - 223 | /24 | 255.255.255.0
    - CLASS D | 224 - 239
    - CLASS E | 240 - 255

### OSI Layer 2
    - Frames are encoded and decoded into bits at Layer 2.
    - Error detection and correction for the physical layer can be provided here.
    - Ethernet is the Layer 2 medium used on Local Area Networks.

### The Ethernet Header 
    - 
### Field Explanations (Brief)  
    - **Preamble (8 bytes)** → A sequence of alternating `1`s and `0`s used by NICs to **synchronise clocking** before frame transmission.  
    - **Destination MAC Address (6 bytes)** → Layer 2 address of the intended receiver.  
    - **Source MAC Address (6 bytes)** → Layer 2 address of the sender.  
    - **EtherType (2 bytes)** → Identifies the payload (e.g., `0x0800` = IPv4, `0x86DD` = IPv6, `0x0806` = ARP).  
    - **Payload(DATA) (46–1500 bytes)** → Encapsulated upper-layer data. If less than 46 bytes, padding is added.  
    - **FCS (Frame Check Sequence, 32 bits)** → CRC value used to detect transmission errors.  

---

### The Media Access Control MAC Address
    - Ethernet uses a 48-bit hexadecimal MAC Address
    - The first 24 bits is the OUI (Organizationally Unique Identifier), which uniquely identifies the manufacturer of the Ethernet port. OUI is assigned by the IEEE.
    - The last 24 bits is vendor assigned.
    - The burned in MAC address on every NIC port in the world is globally unique.
    - Example - 00:50:56:C0:00:08

### Data Link Sublayers
    - IEEE 802 LAN/MAN protocols, including Ethernet, use the following two separate sublayers of the data link layer to operate. They are the Logical Link Control (LLC) and the Media         Access Control (MAC), as shown in the figure.

    - Recall that LLC and MAC have the following roles in the data link layer:
    1. LLC Sublayer - This IEEE 802.2 sublayer communicates between the networking software at the upper layers and the device hardware at the lower layers. It places information in the        frame that identifies which network layer protocol is being used for the frame. This information allows multiple Layer 3 protocols, such as IPv4 and IPv6, to use the same network        interface and media.
    2. MAC Sublayer - This sublayer (IEEE 802.3, 802.11, or 802.15, for example) is implemented in hardware and is responsible for data encapsulation and media access control. It               provides data link layer addressing and is integrated with various physical layer technologies.

### Data link layer protocols include:

   - Ethernet
   - 802.11 Wireless
   - Point-to-Point Protocol (PPP)
   - High-Level Data Link Control (HDLC)
   - Frame Relay

### Layer 1 - Physical Layer
    - OSI Layer 1 conveys the bit stream - electrical impulse, light or radio signals - through the network at the electrical and mechanical level.
    - It provides the hardware means of sending and receiving data, including defining cables, interface cards and physical aspects.
# Layer 1 connection Types for Ethernet - UTP 
    - Ethernet LAN connections can be carried over coaxial cables (no longer in use), twisted copper pair cable, fibre cable or wireless.
    - Copper UTP (Unshielded Twisted Pair) cables are commonly used to connect desktop computers to switches.
    - Connector type is RJ-45, and the maximum length is 100 metres.

# UTP cable categories
    +----------+-------------------+
| Category | Maximum Bandwidth |
+----------+-------------------+
|   Cat 5  |     100 Mbps      |
|   Cat 5e |       1 Gbps      |
|   Cat 6  |      10 Gbps      |
|   Cat 6a |      10 Gbps      |
|   Cat 7  |      10 Gbps      |
|   Cat 8  |      40 Gbps      |
+----------+-------------------+

# Straight-Through vs Crossover UTP Cable
    - The receive and transmit wires in a UTP cable can be wired to the RJ-45 connector as either straight-through or crossover.
    - Straight-through cables are used to connect an end device, such as a pc or router, to a switch.
    - Crossover cables are used to connect devices directly. They are most often used to connect two devices of the same type: e.g. two computers or two switches to each other.
    - Modern switches support Auto MDI-X, where the receive and transmit signals are reconfigured automatically to yield the expected result.

** Auto MDI-X (Automatic Medium-Dependent Interface Crossover) ** is a feature on modern network devices (like switches, routers, and NICs) that automatically detects the type of Ethernet cable (straight-through or crossover) and adjusts the connection accordingly.

🔑 In simple terms:

Without Auto MDI-X, you’d need a crossover cable to connect similar devices (switch-to-switch, PC-to-PC).

With Auto MDI-X, you can use any cable (straight or crossover), and the device will auto-correct the pinouts.

That’s why today, crossover cables are almost obsolete 🚀.

# Fibre Cables
    - Fibre optic cables can be used to support longer distances or higher bandwidth requirements.
    - For example, between separate buildings in a campus, or for switch to switch connections inside a building.

# Single Mode vs Multi Mode Fibre
    - Single-mode or Multi-mode fibre can be used.
    - Single-mode supports higher bandwidth and longer distances, but it is more expensive.

## Single-Mode vs Multi-Mode Fibre

| Feature              | Single-Mode Fiber (SMF)                  | Multi-Mode Fiber (MMF)               |
|----------------------|-------------------------------------------|---------------------------------------|
| **Core Size**        | ~8–10 µm                                 | ~50–62.5 µm                          |
| **Light Source**     | Laser                                    | LED / VCSEL                          |
| **Distance**         | Long-haul (up to 80 km or more)          | Short-range (up to 2 km, <500m at high speeds) |
| **Bandwidth**        | Very high (minimal modal dispersion)     | Lower (affected by modal dispersion) |
| **Cost**             | More expensive optics, higher deployment cost | Cheaper optics, lower cost in LANs   |
| **Use Case**         | Backbone networks, WAN, ISP connections  | Data centers, LANs, campus networks  |

---

**Single-Mode (SMF):**
- Thin core  
- Only one light path → minimal dispersion  
- Best for *long distance*

**Multi-Mode (MMF):**
- Thick core  
- Multiple light paths → more dispersion  
- Best for *short distance*

## Widely Used Fibre Connector Today

👉 LC (Lucent Connector) is the industry standard in modern networks, especially in:

Data centers

High-density patch panels

Enterprise backbones

Telecom environments

It’s favored because of its small size, reliability, and ease of use in high-density setups.

## PoE Power over Ethernet
Power over Ethernet (PoE) is a technology that allows both data and electrical power to be delivered over a single Ethernet cable. This eliminates the need for separate power cables, simplifying installation and reducing costs.

Standards:

    - IEEE 802.3af (PoE): Provides up to 15.4W per port.

    - IEEE 802.3at (PoE+): Provides up to 30W per port.

    - IEEE 802.3bt (PoE++/4PPoE): Provides up to 60–100W per port.

    Common Uses: IP phones, wireless access points, security cameras, IoT devices, and network switches.


### Frame Forwarding Methods on Cisco Switches
    - Switches use one of the following forwarding methods for switching data between network ports:

    1. Store-and-forward switching - This frame forwarding method receives the entire frame and computes the CRC. CRC --- In networking, a Cyclic Redundancy Check (CRC) is an     error-        detection method where a sender computes a fixed-length numerical value based on the data to be sent and appends it to the data. --- uses a mathematical formula, based on the            number of bits (1s) in the frame, to determine whether the received frame has an error. If the CRC is valid, the switch looks up the destination address, which determines the            outgoing interface. Then the frame is forwarded out of the correct port.
    2. Cut-through switching - This frame forwarding method forwards the frame before it is entirely received. At a minimum, the destination address of the frame must be read before the        frame can be forwarded.
       
       A big advantage of store-and-forward switching is that it determines if a frame has errors before propagating the frame. When an error is detected in a frame, the switch discards        the frame. Discarding frames with errors reduces the amount of bandwidth consumed by corrupt data. Store-and-forward switching is required for quality of service (QoS) analysis          on converged networks, where frame classification for traffic prioritisation is necessary. For example, voice over IP (VoIP) data streams need to have priority over web-browsing         traffic.

###    Cut-Through Switching

       In cut-through switching, the switch acts upon the data as soon as it is received, even if the transmission is not complete. The switch buffers just enough of the frame to read          the destination MAC address so that it can determine to which port it should forward out the data. The destination MAC address is located in the first 6 bytes of the frame               following the preamble. The switch looks up the destination MAC address in its switching table, determines the outgoing interface port, and forwards the frame onto its                   destination through the designated switch port. The switch does not perform any error checking on the frame.

        There are two variants of cut-through switching:

     1. Fast-forward switching - Fast-forward switching offers the lowest level of latency. Fast-forward switching immediately forwards a packet after reading the destination address.         Because fast-forward switching starts forwarding before the entire packet has been received, there may be times when packets are relayed with errors. This occurs infrequently, and       the destination NIC discards the faulty packet upon receipt. In fast-forward mode, latency is measured from the first bit received to the first bit transmitted. Fast-forward             switching is the typical cut-through method of switching.
    2. Fragment-free switching - In fragment-free switching, the switch stores the first 64 bytes of the frame before forwarding. Fragment-free switching can be viewed as a compromise          between store-and-forward switching and fast-forward switching. The reason fragment-free switching stores only the first 64 bytes of the frame is that most network errors and            collisions occur during the first 64 bytes. Fragment-free switching tries to enhance fast-forward switching by performing a small error check on the first 64 bytes of the frame          to ensure that a collision has not occurred before forwarding the frame. Fragment-free switching is a compromise between the high latency and high integrity of store-and-forward         switching, and the low latency and reduced integrity of fast-forward switching.

###    Auto-MDIX - Auto-MDIX (Automatic Medium-Dependent Interface Crossover) is a network port feature that automatically detects the type of Ethernet cable (straight-through or crossover) being used and configures the connection appropriately, allowing users to connect devices without needing to worry about using the correct cable type. 
