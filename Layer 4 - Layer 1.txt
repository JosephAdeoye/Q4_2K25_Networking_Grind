Layer 4 - The Transport Layer
    - The transport layer provides transparent transfer of data between hosts and is responsible for end to end error recovery and flow control.
    - Flow control is the process of adjusting the flow of data from the sender to ensure that the receiving host can handle all of it.

# Session Multiplexing
    - Session Multiplexing is the process by which a host is able to support multiple sessions simultaneously and manager the individual traffic streams over a single link.

# Layer 4 Port Numbers  
    - The Layer 4 destination port number is used to identify the upper layer protocol.
    - For example, HTTP uses port 80, SMTP email uses port 25.
    - The sender also adds a source port number to the Layer 4 header.
    - The combination of source and destination port number can be used to track sessions. E.g DST: 80 SRC: 1500

# TCP
    - TCP (Transmission Control Protocol) and UDP (User Datagram Protocol) are the most common Layer 4 protocols. 
    - TCP is connection oriented - once a connection is established, data can be sent bidirectionally over that connection.
    - TCP carries out sequencing to ensure segments are processed in the correct order and none are missing.
    - TCP is reliable - the receiving host sends acknowledgments back to the sender. Lost segments are resent.
    - TCP performs flow control.

# TCP Three-Way Handshake
    - SYN (Synchronize)
    - SYN-ACK (Synchronize - Acknowledgement)
    - ACK (Acknowledgement)

## TCP Header Format  

    The TCP header contains several fields used for reliable, connection-oriented communication.  


### Field Explanations (Brief)
    - **Source Port / Destination Port** → Identify sending and receiving applications.  
    - **Sequence Number** → Tracks the position of data in the stream.  
    - **Acknowledgment Number** → Confirms receipt of data.  
    - **Data Offset** → Size of the TCP header.  
    - **Reserved** → Reserved for future use (set to 0).  
    - **Control Flags** → 6 bits: URG, ACK, PSH, RST, SYN, FIN (used to control connections).  
    - **Window Size** → Flow control; how much data can be sent before requiring acknowledgment.  
    - **Checksum** → Error-checking for header and data.  
    - **Urgent Pointer** → Marks urgent data (used with URG flag).  
    - **Options** → Extra settings (e.g., Maximum Segment Size).  
    - **Data** → The actual payload (application data).  
---
# UDP
    - The User Datagram Protocol sends traffic best effort.
    - UDP is not connection oriented. There is no handshake connection setup between the hosts.
    - UDP does not carry out sequencing to ensure segments are processed in the correct order and none are missing.
    - UDP is not reliable - the receiving host does not send acknowledgments back to the sender.
    - UDP does not perform flow control
    - If error detection and recovery is required it is up to the upper layers to provide it.

## UDP Header Format  

The UDP header is much simpler than TCP, providing basic connectionless communication.  


### Field Explanations (Brief)
- **Source Port / Destination Port** → Identify sending and receiving applications.  
- **Length** → Total length of the UDP header and data (in bytes).  
- **Checksum** → Error-checking for header and data (optional in IPv4, mandatory in IPv6).  
- **Data** → The actual payload (application data).  

---

- **TCP** → Complex, reliable, connection-oriented, with sequencing/acknowledgments.  
- **UDP** → Simple, fast, connectionless, with minimal overhead.  

# TCP vs UDP
    - Application developers will typically choose to use TCP for traffic which requires reliability.
    - Real-time applications such as voice and video can't afford the extra overhead of TCP so they can use UDP,
    - Some applications can use both TCP and UDP.

# Common applications and their destination protocols
    # TCP
        - FTP (21)
        - SSH (22)
        - TELNET (23)
        - HTTP (80)
        - HTTPS (443)
    # UDP
        - TFTP (69)
        - SNMP (161)
    # TCP & UDP 
        - DNS (53)

# Layer 3 - The Network Layer
    - The Network layer is responsible for routing packets to their destination and for quality of service.
    - IP (Internet Protocol) is the best known layer 3 protocol.
    - It is a connectionless protocol with no acknowledgments at Layer 3.
    - Other Layer 3 protocols include ICMP (Internet Control Message Protocol) and IPSec.

# IP Addressing
    - IP Addressing is a logical addressing scheme which is implemented at Layer 3
    - The Network designer uses IP addressing to partition the overall network into smaller 'subnets'.
    - This improves performance and security and makes troubleshooting easier.
    - Layer 2 MAC address use one big flat addressing scheme. There is no logical separation between networks at Layer 2, it is done at Layer 3.

## IPv4 Header Format  

    The IPv4 header contains fields used for addressing, routing, and delivering packets.  


### Field Explanations (Brief)  
    - **Version (4 bits)** → IP version (always `4` for IPv4).  
    - **Header Length (IHL, 4 bits)** → Length of the IPv4 header in 32-bit words.  
    - **Type of Service (TOS, 8 bits)** → Originally for service priority; now often split into **DSCP** (QoS) and **ECN** (congestion control).  
    - **Total Length (16 bits)** → Entire packet size in bytes (header + data).  
    - **Identification (16 bits)** → Unique value for fragment reassembly.  
    - **Flags (3 bits)** → Control fragmentation (e.g., DF = Don’t Fragment, MF = More Fragments).  
    - **Fragment Offset (13 bits)** → Position of this fragment in the original packet.  
    - **Time to Live (TTL, 8 bits)** → Decremented by each router hop; prevents looping.  
    - **Protocol (8 bits)** → Identifies the encapsulated protocol (e.g., 1 = ICMP, 6 = TCP, 17 = UDP).  
    - **Header Checksum (16 bits)** → Error-checking for the IPv4 header.  
    - **Source Address (32 bits)** → IPv4 address of the sender.  
    - **Destination Address (32 bits)** → IPv4 address of the receiver.  
    - **Options (variable, rarely used)** → Extra control features.  
    - **Data (Payload)** → Encapsulated upper-layer data (TCP, UDP, ICMP, etc.).  

    ---



                