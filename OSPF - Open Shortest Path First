OSPF CHARACTERISTICS

  - OSPF is a Link State routing protocol
  - It supports large networks
  - It has a very fast convergence time
  - Messages are sent using multicast
  - OSPF is an open standard protocol
  - It uses Dijkstra's Shortest Path First Algorithm to determine the best path to learned networks.

Link State Routing Protocols
  - In Link State routing protocols, each router describes itself and its interfaces to its directly connected neighbours
  - This information is passed unchanged from one router to another
  - Every router learns the full picture of the network, including every router, its interfaces and what they connect to
  - OSPF routers use LSA Link State Advertisements to pass on routing updates

OSPF Operations
  - Discover neighbours
  - Form adjacencies
  - Flood Link State Database (LSDB)
  - Compute Shortest Path
  - Install the best routes in the routing table
  - Respond to network changes

OSPF Packet Types
  - Hello Packets: A router will send out and listen for Hello packets when OSPF is enabled on an interface, and form adjacencies with other OSPF routers on the link
  - DD (Database Description) packets: Adjacent routers will tell each other what they know about the network with the DD Packet
  - LSR (Link State Request) packets: If a router is missing information about any of the networks in the received DD, it will send the neighbour an LSR packet
  - LSU (Link State Advertisement) packets: A routing update
  - LSU (Link State Update): Contains a list of LSAs which should be updated, used during flooding
  - LSAck (Link State Acknowledgement): Receiving routers acknowledge LSAs

OSPF Configuration - Process ID

  - Different interfaces on a router can run in different instances of OSPF
  - Different instances have different Link State Databases
  - Only one instance is typically configured on OSPF routers - multiple Process IDs are rarely used
  - The process ID is locally significant. It does not have to match the neighbour router to form an adjacency

config 
R1 (config) #router ospf 1
R1 (config-router) # network 10.0.0.0 0.0.255.255 area 0

  - The network command uses a wildcard mask, which is the inverse of a subnet mask
  - Subtract each octet in the subnet mask from 255 to calculate the wildcard mask
  - A subnet mask of 255.255.0.0 equals a wildcard mask of 0.0.255.255
  - A subnet mask of 255.255.255.252 equals a wildcard mask of 0.0.0.3

R1 (config-router) # network 10.0.0.0 0.0.255.255 area 0
The network command here means:
  - Look for interfaces with an IP address which falls within this range
  - Enable OSPF on those interfaces - send out and listen for OSPF hello messages, and peer with adjacent OSPF routers
  - Advertise the network and mask which is configured on those interfaces

OSPF Router ID
  - OSPF routers identify themselves using an OSPF Router ID, which is in the form of an IP Address
  - This will default to being the highest IP address of any loopback interfaces configured on the router, or the highest other IP address if a loopback does not exist
  - Loopback interfaces never go down, so the Router ID will not change
  - You can also manually specify the Router ID
  - Best practice is to use a LoopBack or manually set the Router ID
** IF A LOOPBACK OR HIGHER IP ADDRESS IS CONFIGURED, THE ROUTER ID WILL CHANGE ON OSPF PROCESS RESTART
** DEFAULT-INFORMATION ORIGINATE IS USED FOR DEFAULT ROUTE INJECTION IN AN OSPF PROCESS


  - In Link State Routing Protocols like OSPF, every router learns the full picture of the network, including every router, its interfaces and what they connect to
  - This can cause issues in large networks:
    - Too many routes can use up too much router memory
    - Network changes cause all routers to reconverge, which takes time and CPU resources
  TO MITIGATE AGAINST THESE ISSUES:
    - OSPF supports a hierarchical design, which segments large networks into smaller areas to solve this problem
    - Each router maintains full information about its own area, but only summary information about other areas

  OSPF AREAS
  - A two-level hierarchy is usually used when creating OSPF areas. The areas can be regarded as:
    - Transit area (BACKBONE or AREA 0). This is AREA does not generally contain end users.
    - Regular areas (NONBACKBONE AREAS). Used to connect end users to the Transit area. By default, all transit traffic goes through the TRANSIT (BACKBONE) AREA.
  - Small networks do not require a hierarchical design, and all routers can be in AREA 0 (BACKBONE AREA).

  OSPF CONFIGURATION - Network  
  - R1(config-router)# network 10.0.0.0 0.0.255.255 area 0
  - The above is configured at the interface level with the "network" command
  - For a router to form an adjacency, its neighbour must be configured to be in the same area

  OSPF Router Types - BACKBONE Routers
  - Routers which have all their OSPF interfaces in AREA 0 are BACKBONE Routers
  - Routers maintain a full Link State Database (LSDB) of other routers and links in their own area

OSPF Router Types - AREA BORDER ROUTERS (ABRs)
  - Routers which have interfaces in multiple areas are AREA BORDER ROUTERS (ABRs)
An ABR has the following characteristics:
  - It separates LSA flooding zones.
  - It becomes the primary point for AREA address summarisation.
  - It functions regularly as the source for default routes.
  - It maintains the LSDB for each area with which it is connected. 
  - The ideal design is to have each ABR connected to two AREAs only, the BACKBONE and another AREA, with three AREAS being the upper limit.

Manual Summarisation
  - AREA BORDER ROUTERS (ABRs) do not automatically summarise routes.
  - If you do not configure summarisation, all routes are flooded everywhere.

OSPF ROUTER TYPES - NORMAL AREA ROUTERS
  - Routers which have all their OSPF interfaces in a normal AREA are normal internal routers.
  - Routers maintain a full LSDB of other routers and links in their own area
  - They learn Inter Area routes to other areas from their ABRs

OSPF Router Types - AUTONOMOUS SYSTEM BOUNDARY ROUTERS
  - Routers which redistribute into OSPF are AUTONOMOUS SYSTEM BOUNDARY ROUTERS

BANDWIDTH vs CLOCK RATE and SPEED

The SPEED command
  - The rate that Ethernet interfaces physically transmit at is set by the 'speed' command
  - GigabitEthernet interfaces transmit at 1000 Mbps by default
  - FastEthernet interfaces transmit at 100 Mbps by default
  - If you use the 'speed 10' command on a FastEthernet interface, it will physically transmit at 10 Mbps

The CLOCK-RATE command
  - The 'clock rate' command sets the rate that Serial interfaces physically transmit at
  - Serial interfaces transmit at 1.544 Mbps by default
  - If you use the 'clock rate 64000' command on a Serial interface, it will physically transmit at 64 Kbps

The BANDWIDTH command
  - Interfaces also have a default bandwidth (eg 100 Mbps on FastEthernet interfaces, 1.544 Mbps on a serial interface)  
  - The bandwidth usually matches the physical transmission rate of the interface 
  - The 'bandwidth' setting on an interface does not affect the physical transmission rate - that is set by the 'speed' or 'clock rate'
  - If you set a bandwidth of 50 Mbps on a FastEthernet interface, it will still transmit at 100 Mbps
  - The bandwidth command affects software policy on the router, such as which path will be selected by EIGRP or OSPF, or how much bandwidth will be guaranteed to a traffic type by QoS
  - You can influence software policy by setting the bandwidth on an interface

OSPF Metric Calculation
  - As OSPF is a Link State routing protocol, the router will learn about all destinations in its area, the links and their cost
  - The router will select routes based on its lowest cost to get to the destination

OSPF Link States
  - In a multiple area OSPF network, ABRs know the information for each area they are connected to
  - When multiple areas are in use, each router has individual routes for each IP subnet in its own area, and summary routes to other areas which go via an ABR

OSPF Metric Calculation  
  - For destinations in its own area, a router looks at all available links to get there, and chooses the path with the lowest overall cost
  - For destinations in another area, a router looks at all available links to get to the ABR and chooses the path with the lowest overall cost to the ABR. It's then up to the ABR to choose the best path onwards from there

SPF Shortest Path First Algorithm
  - The SPF -- Shortest Path First Algorithm calculates the overall cost for each available path to each destination network, then selects the lowest cost path
  - The overall cost = the cumulative cost of all outgoing interfaces
  - You should ensure the cost is set the same on the interfaces on both sides of a link or you can get asymmetric routing

Reference Bandwidth
  - The cost is automatically derived from the interface bandwidth
  - COST = REFERENCE BANDWIDTH / INTERFACE BANDWIDTH
  - The default reference bandwidth is 100Mbps
  - FastEthernet link cost defaults to 1 (100/100)
  - OSPF treats all interfaces of 100 Mbps or faster as equal
  - FastEthernet, Gigabit Ethernet, 10 Gigabit Ethernet, etc. all default to a cost of 1
  - This can cause undesirable routing in modern networks

YOU CAN, HOWEVER, ALTER THE DEFAULT REFERENCE BANDWIDTH USING THE FOLLOWING COMMANDS
  - R1(CONFIG)# ROUTER OSPF 1
  - R1(CONFIG-ROUTER)# AUTO-COST REFERENCE-BANDWITH 100000
THE REFERENCE BANDWIDTH SHOULD BE CHANGED ON ALL ROUTERS

Manipulating the OSPF Metric
  - OSPF takes the bandwidth of an interface into account when calculating the metric, so paths along higher bandwidth links will be preferred
  - The most desirable path will typically be automatically selected
  - If you want to use a different path, you can manipulate this by manually changing the bandwidth or OSPF cost on interfaces 
  - It is recommended to use cost because the bandwidth setting can affect many features other than OSPF (such as QoS)

A MANUALLY CONFIGURED OSPF COST OVERRIDES THE VALUE AUTOMATICALLY DERIVED FROM THE BANDWIDTH 
  - R1(config)# interface FastEthernet 0/0
  - R1(config-if)#ip ospf cost 50

## OSPF Protocol and IP Header

OSPF (Open Shortest Path First) is a **Layer 3 routing protocol** that runs directly over IP.  
It does **not** use TCP or UDP for transport. Instead, OSPF packets are encapsulated directly inside IP packets.

---

### IP Header Fields Relevant to OSPF
- **Protocol Field (8 bits)** → Identifies the Layer 4 protocol carried in the packet.  
  - `6` → TCP  
  - `17` → UDP  
  - `89` → OSPF  

Thus, when the **Protocol Number = 89**, the payload is recognised as an **OSPF packet**.

## OSPF Packet Structure

OSPF (Open Shortest Path First) packets have a well-defined header, followed by the actual data (depending on packet type).  

---

### 🔹 OSPF Packet Header Fields
| Field              | Description                                                                 |
|--------------------|-----------------------------------------------------------------------------|
| **Version**        | Identifies OSPFv2 (IPv4) or OSPFv3 (IPv6).                                  |
| **Type**           | Defines the OSPF packet type: <br> 1 = Hello <br> 2 = DBD (Database Descriptor) <br> 3 = LSR (Link State Request) <br> 4 = LSU (Link State Update) <br> 5 = LSAck (Link State Acknowledgment) |
| **Packet Length**  | Total size of the OSPF packet in bytes.                                     |
| **Router ID**      | Unique ID of the advertising router.                                        |
| **Area ID**        | Identifies the OSPF area where the packet belongs.                          |
| **Checksum**       | Ensures data integrity of the OSPF packet.                                  |
| **Authentication Type** | 0 = None <br> 1 = Plain-text password <br> 2 = MD5 authentication       |
| **Authentication** | The actual authentication data (if enabled).                               |
| **Data**           | The OSPF-specific payload (depends on the packet type).                     |

---

### 🔹 OSPF Packet Types
- **Hello (Type 1):** Used to establish and maintain neighbour relationships.  
- **DBD (Type 2):** Database Descriptor; summarizes the LSAs a router has.  
- **LSR (Type 3):** Link State Request; requests specific LSAs from neighbors.  
- **LSU (Type 4):** Link State Update; contains LSAs to update the LSDB.  
- **LSAck (Type 5):** Acknowledges receipt of LSAs.  

---

### Hello Packets
- OSPF routers discover each other and form adjacencies via Hello packets
- They send Hello packets out each interface where OSPF is enabled (except passive interfaces)
- Multicast to 224.0.0.5 ('all OSPF routers')
- Sent every 10 seconds by default

### Hello Packets Contents
- Router ID: 32-bit number that uniquely identifies each OSPF router (usually the loopback interface of the router if one exists)
- Hello Interval: How often router sends Hello packets. Default 10 secs.
- Dead Interval: How long a router waits to hear from a neighbour before declaring it out of service. Default 4x Hello Interval
- Neighbours: A list of adjacent OSPF routers that this router has received a Hello packet from
- Area ID: The area configured for that interface
- Router Priority: An 8-bit number used to select DR and BDR
- DR and BDR IPv4 Address: If known
- Authentication Flag: Authentication details if configured (password for security)
- Stub Area Flag: If the area is a stub area. Stub areas have a default route to their ABR rather than learning routes outside the area.
  What is a Stub Area?

  A stub area is a special type of OSPF area designed to reduce the size of the routing table and cut down on unnecessary LSA flooding.

  Normally, an OSPF area learns all routes (internal + external routes).

  In a stub area, external routes (from outside OSPF, like from BGP or redistributed static routes) are not advertised.

  Instead, the ABR (Area Border Router) injects a default route (0.0.0.0/0) into the stub area.
  👉 This means routers inside the stub just send "unknown" traffic to the ABR, instead of storing every possible external route.

### Maximum Transmission Unit (MTU) Mismatches
- If there is an MTU setting mismatch, then OSPF routers can become neighbours, but they will not exchange routes with each other
- MTU is configured at the interface level (default 1500 bytes)
- You can set the interface MTU (affects all packets) and/or interface IP MTU (affects only IP packets)
----- MTU IS NOT AN OSPF SETTING. IT IS GENERALLY A SETTING ON THE ROUTER INTERFACE -----

# OSPF Neighbour States

OSPF routers form neighbour relationships to exchange routing information. The process goes through several states:

| State          | Description                                                                 |
|----------------|-----------------------------------------------------------------------------|
| **Down**       | No Hello packets received yet. Neighbour is considered down.                 |
| **Init**       | Router has received a Hello, but bidirectional communication not established.|
| **2-Way**      | Bidirectional communication established (both routers see each other).      |
| **ExStart**    | Routers decide who will be master/slave for Database Description (DBD) exchange. The highest Router ID is usually the master |
| **Exchange**   | Routers exchange DBD packets describing their LSAs.                         |
| **Loading**    | Routers request missing LSAs using Link State Requests (LSRs).              |
| **Full**       | All LSAs are synchronized; adjacency fully established.                     |

> 🔑 Note: Not all neighbours reach **Full** state (e.g., DROTHERs in multi-access networks may stay at **2-Way**).

### OSPF DR and BDR Designated Routers
OSPF on Multiaccess Segments
  - On point-to-point links, OSPF router pairs form a FULL adjacency
  - On multiaccess segments (such as Ethernet) where there can be multiple routers, it is inefficient for all routers to form a FULL OSPF adjacency
  - On multiaccess segments such as Ethernet, the routers elect the DR and BDR at the 2-Way stage
  - There is no election on point-to-point links

DR and BDR
- A DR Designated Router and BDR Backup Designated Router are elected 
- The router with the highest priority becomes DR, and the router with the 2nd highest priority becomes BDR
- Default priority is 1, the higher the better (0 - 255)
- The highest Router ID is used in case of a tie

Setting OSPF priority
- R1(config)# interface FastEthernet 0/0
- R1(config-if)# ip ospf priority 100
*** You need to restart OSPF on an interface for the command to take effect


WILL BE BACK SHORTLY 
