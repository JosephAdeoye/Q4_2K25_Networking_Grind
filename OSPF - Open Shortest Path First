OSPF CHARACTERISTICS

  - OSPF is a Link State routing protocol
  - It supports large networks
  - It has a very fast convergence time
  - Messages are sent using multicast
  - OSPF is an open standard protocol
  - It uses Dijkstra's Shortest Path First Algorithm to determine the best path to learned networks.

Link State Routing Protocols
  - In Link State routing protocols, each router describes itself and its interfaces to its directly connected neighbours
  - This information is passed unchanged from one router to another
  - Every router learns the full picture of the network, including every router, its interfaces and what they connect to
  - OSPF routers use LSA Link State Advertisements to pass on routing updates

OSPF Operations
  - Discover neighbours
  - Form adjacencies
  - Flood Link State Database (LSDB)
  - Compute Shortest Path
  - Install the best routes in the routing table
  - Respond to network changes

OSPF Packet Types
  - Hello Packets: A router will send out and listen for Hello packets when OSPF is enabled on an interface, and form adjacencies with other OSPF routers on the link
  - DD (Database Description) packets: Adjacent routers will tell each other what they know about the network with the DD Packet
  - LSR (Link State Request) packets: If a router is missing information about any of the networks in the received DD, it will send the neighbour an LSR packet
  - LSU (Link State Advertisement) packets: A routing update
  - LSU (Link State Update): Contains a list of LSAs which should be updated, used during flooding
  - LSAck (Link State Acknowledgement): Receiving routers acknowledge LSAs

OSPF Configuration - Process ID

  - Different interfaces on a router can run in different instances of OSPF
  - Different instances have different Link State Databases
  - Only one instance is typically configured on OSPF routers - multiple Process IDs are rarely used
  - The process ID is locally significant. It does not have to match the neighbour router to form an adjacency

config 
R1 (config) #router ospf 1
R1 (config-router) # network 10.0.0.0 0.0.255.255 area 0

  - The network command uses a wildcard mask, which is the inverse of a subnet mask
  - Subtract each octet in the subnet mask from 255 to calculate the wildcard mask
  - A subnet mask of 255.255.0.0 equals a wildcard mask of 0.0.255.255
  - A subnet mask of 255.255.255.252 equals a wildcard mask of 0.0.0.3

R1 (config-router) # network 10.0.0.0 0.0.255.255 area 0
The network command here means:
  - Look for interfaces with an IP address which falls within this range
  - Enable OSPF on those interfaces - send out and listen for OSPF hello messages, and peer with adjacent OSPF routers
  - Advertise the network and mask which is configured on those interfaces

OSPF Router ID
  - OSPF routers identify themselves using an OSPF Router ID, which is in the form of an IP Address
  - This will default to being the highest IP address of any loopback interfaces configured on the router, or the highest other IP address if a loopback does not exist
  - Loopback interfaces never go down, so the Router ID will not change
  - You can also manually specify the Router ID
  - Best practice is to use a LoopBack or manually set the Router ID
** IF A LOOPBACK OR HIGHER IP ADDRESS IS CONFIGURED, THE ROUTER ID WILL CHANGE ON OSPF PROCESS RESTART
** DEFAULT-INFORMATION ORIGINATE IS USED FOR DEFAULT ROUTE INJECTION IN AN OSPF PROCESS


  - In Link State Routing Protocols like OSPF, every router learns the full picture of the network, including every router, its interfaces and what they connect to
  - This can cause issues in large networks:
    - Too many routes can use up too much router memory
    - Network changes cause all routers to reconverge, which takes time and CPU resources
  TO MITIGATE AGAINST THESE ISSUES:
    - OSPF supports a hierarchical design, which segments large networks into smaller areas to solve this problem
    - Each router maintains full information about its own area, but only summary information about other areas

  OSPF AREAS
  - A two-level hierarchy is usually used when creating OSPF areas. The areas can be regarded as:
    - Transit area (BACKBONE or AREA 0). This is AREA does not generally contain end users.
    - Regular areas (NONBACKBONE AREAS). Used to connect end users to the Transit area. By default, all transit traffic goes through the TRANSIT (BACKBONE) AREA.
  - Small networks do not require a hierarchical design, and all routers can be in AREA 0 (BACKBONE AREA).

  OSPF CONFIGURATION - Network  
  - R1(config-router)# network 10.0.0.0 0.0.255.255 area 0
  - The above is configured at the interface level with the "network" command
  - For a router to form an adjacency, its neighbour must be configured to be in the same area

  OSPF Router Types - BACKBONE Routers
  - Routers which have all their OSPF interfaces in AREA 0 are BACKBONE Routers
  - Routers maintain a full Link State Database (LSDB) of other routers and links in their own area

OSPF Router Types - AREA BORDER ROUTERS (ABRs)
  - Routers which have interfaces in multiple areas are AREA BORDER ROUTERS (ABRs)
An ABR has the following characteristics:
  - It separates LSA flooding zones.
  - It becomes the primary point for AREA address summarisation.
  - It functions regularly as the source for default routes.
  - It maintains the LSDB for each area with which it is connected. 
  - The ideal design is to have each ABR connected to two AREAs only, the BACKBONE and another AREA, with three AREAS being the upper limit.

Manual Summarisation
  - AREA BORDER ROUTERS (ABRs) do not automatically summarise routes.
  - If you do not configure summarisation, all routes are flooded everywhere.

OSPF ROUTER TYPES - NORMAL AREA ROUTERS
  - Routers which have all their OSPF interfaces in a normal AREA are normal internal routers.
  - Routers maintain a full LSDB of other routers and links in their own area
  - They learn Inter Area routes to other areas from their ABRs

OSPF Router Types - AUTONOMOUS SYSTEM BOUNDARY ROUTERS
  - Routers which redistribute into OSPF are AUTONOMOUS SYSTEM BOUNDARY ROUTERS
